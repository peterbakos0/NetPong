CXX=g++
CP=cp -r
MKDIR=mkdir -p
RM=rm -rf

CXXFLAGS=-Wall
LDLIBS=-lSDL2 -lSDL2main -lSDL2_image -lSDL2_ttf

SOURCE_DIR=Source
BUILD_DIR=Build
OBJECTS_DIR=Objects
BINARY_DIR=Binary
ASSETS_DIR=Assets
TARGET_EXEC=Pong
CONFIG_FILE=Config.txt

SOURCE_ASSETS=*.aseprite

SOURCES=$(shell find $(SOURCE_DIR) -name *.cpp)
OBJECTS=$(patsubst $(SOURCE_DIR)/%.cpp, $(BUILD_DIR)/$(OBJECTS_DIR)/%.o, $(SOURCES))

all: $(BUILD_DIR)/$(BINARY_DIR)/$(TARGET_EXEC) $(BUILD_DIR)/$(BINARY_DIR)/$(CONFIG_FILE) $(BUILD_DIR)/$(BINARY_DIR)/$(ASSETS_DIR)

clean:
	$(RM) $(BUILD_DIR)

$(BUILD_DIR)/$(BINARY_DIR)/$(TARGET_EXEC): $(OBJECTS)
	$(MKDIR) $(BUILD_DIR)/$(BINARY_DIR)
	$(CXX) $(OBJECTS) $(CXXFLAGS) $(LDLIBS) -o $(BUILD_DIR)/$(BINARY_DIR)/$(TARGET_EXEC)

$(BUILD_DIR)/$(BINARY_DIR)/$(CONFIG_FILE): $(CONFIG_FILE)
	$(MKDIR) $(BUILD_DIR)/$(BINARY_DIR)
	$(CP) $(CONFIG_FILE) $(BUILD_DIR)/$(BINARY_DIR)/$(CONFIG_FILE)

$(BUILD_DIR)/$(BINARY_DIR)/$(ASSETS_DIR): $(ASSETS_DIR)
	$(MKDIR) $(BUILD_DIR)/$(BINARY_DIR)
	$(CP) $(ASSETS_DIR) $(BUILD_DIR)/$(BINARY_DIR)
	$(RM) $(BUILD_DIR)/$(BINARY_DIR)/$(ASSETS_DIR)/$(SOURCE_ASSETS)

$(BUILD_DIR)/$(OBJECTS_DIR)/%.o: $(SOURCE_DIR)/%.cpp
	$(MKDIR) $(dir $@)
	$(CXX) $< $(CXXFLAGS) -o $@ -c
